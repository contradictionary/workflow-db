// https://pris.ly/d/prisma-schema
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model users {
  id         Int      @id @default(autoincrement())
  login      String
  email      String   @unique
  name       String
  password   String
  userroleid Int
  createdon  DateTime @default(now())
  modifiedon DateTime @default(now())
  status     Int      @default(0) //enabled/disabled/locked/loggedin/loggedin-locked/disabled-locked/resetpassword

  userrole            userroles      @relation("UserRole", references: [id], fields: [userroleid])
  usercreatemultirole userroles[]    @relation("CreateRole")
  usersessions        usersessions[]
  list                list[]
  listvalues          listvalues[]

  @@index([email])
}

model usersessions {
  id         Int      @id @default(autoincrement())
  userid     Int
  sessionid  String   @default(uuid())
  device     String
  createdon  DateTime @default(now())
  modifiedon DateTime @default(now())
  status     Int      @default(0) //0-active, 1-closed

  user users @relation(fields: [userid], references: [id])

  @@unique([userid, sessionid])
}

model userroles {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  createdby   Int?
  createdon   DateTime @default(now())
  modifiedon  DateTime @default(now())

  createdbyUser users? @relation("CreateRole", fields: [createdby], references: [id])

  useracls useracl[] @relation("Useracls")
  users    users[]   @relation("UserRole")
}

model useracl {
  id          Int    @id @default(autoincrement())
  userrolesid Int
  type        Int
  value       String

  userroles userroles @relation("Useracls", fields: [userrolesid], references: [id])
}

model list {
  id         Int          @id @default(autoincrement())
  name       String
  createdby  Int
  createdon  DateTime     @default(now())
  modifiedon DateTime     @default(now())
  listvalues listvalues[]

  createdbyUser users @relation(fields: [createdby], references: [id])
}

model listvalues {
  id        Int    @id @default(autoincrement())
  listid    Int
  key       String
  value     String
  createdby Int
  status    Int    @default(0)

  list list  @relation(fields: [listid], references: [id])
  User users @relation(fields: [createdby], references: [id])

  @@unique([listid, key])
  @@index([key])
}
